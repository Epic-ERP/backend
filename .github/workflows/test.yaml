on: pull_request
name: Run linting checks and tests
jobs:
  lint:
    name: Linting
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Check Linting.
        run: |
          cd ./app
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
          pip3 install $($HOME/.poetry/bin/poetry export --dev --without-hashes | egrep "black|mypy|isort|flake8|pydantic|sqlalchemy-stubs" | cut -d';' -f1)
          PATH=$HOME/.local/bin:$PATH ./scripts/lint.sh
  test:
    name: Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Run tests.
        run: |
          cat > .env << EOF
          DOMAIN=localhost
          STACK_NAME=revamp-ci-env
          TRAEFIK_PUBLIC_NETWORK=traefik-public
          TRAEFIK_TAG=revamp.ci.env
          TRAEFIK_PUBLIC_TAG=traefik-public
          DOCKER_IMAGE_BACKEND=revamp_backend
          DOCKER_IMAGE_CELERYWORKER=revamp_celeryworker
          PROJECT_NAME=Epic ERP
          SECRET_KEY=$(openssl rand -hex 32)
          FIRST_SUPERUSER=admin@revamp.ci.env
          FIRST_SUPERUSER_PASSWORD=$(openssl rand -hex 32)
          SMTP_HOST=
          SENTRY_DSN=
          # Database configuration - set postgres for CI
          DB=postgres
          DB_SERVER=db
          DB_USER=postgres
          DB_PASSWORD=password
          POSTGRES_PASSWORD=password
          DB_NAME=postgres
          EOF

          ./scripts/test.sh
